#!/usr/bin/env node
/**
 * Script de teste para verificar a funcionalidade do bot√£o "Sincronizar Strapi"
 * Simula as chamadas feitas pelo admin
 */

// Configura√ß√µes
const BASE_URL = 'http://localhost:4000';
const TOKEN = 'test-token'; // Token mock para testes

// Fun√ß√£o auxiliar para fetch
const fetch = global.fetch || require('node-fetch');

// Fun√ß√£o para testar sincroniza√ß√£o completa
async function testSyncCompleta() {
  console.log('üîÑ Testando sincroniza√ß√£o completa...');
  
  try {
    const response = await fetch(`${BASE_URL}/api/sync-imoveis`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${TOKEN}`,
      },
    });

    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ Sincroniza√ß√£o completa - SUCESSO');
      console.log(`üìä Total: ${data.total}`);
      console.log(`‚úÖ Sucessos: ${data.successCount}`);
      console.log(`‚ùå Erros: ${data.errorCount}`);
      if (data.errors && data.errors.length > 0) {
        console.log(`‚ö†Ô∏è  Erros: ${data.errors.join(', ')}`);
      }
    } else {
      console.log('‚ùå Sincroniza√ß√£o completa - FALHA');
      console.log(`Erro: ${data.error}`);
    }
  } catch (error) {
    console.log('‚ùå Erro na conex√£o:', error.message);
  }
}

// Fun√ß√£o para testar sincroniza√ß√£o individual
async function testSyncIndividual(imovelId) {
  console.log(`üîÑ Testando sincroniza√ß√£o individual - ID: ${imovelId}...`);
  
  try {
    const response = await fetch(`${BASE_URL}/api/sync-imoveis/${imovelId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${TOKEN}`,
      },
    });

    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ Sincroniza√ß√£o individual - SUCESSO');
      console.log(`Mensagem: ${data.message}`);
    } else {
      console.log('‚ùå Sincroniza√ß√£o individual - FALHA');
      console.log(`Erro: ${data.error}`);
    }
  } catch (error) {
    console.log('‚ùå Erro na conex√£o:', error.message);
  }
}

// Fun√ß√£o principal
async function main() {
  console.log('üß™ Iniciando testes de sincroniza√ß√£o...\n');
  
  // Verificar se o servidor est√° rodando
  try {
    const response = await fetch(`${BASE_URL}/api/imoveis`);
    console.log(`üì° Servidor rodando: ${response.ok ? '‚úÖ' : '‚ùå'}`);
    if (!response.ok) {
      console.log('‚ùå Servidor n√£o est√° respondendo corretamente');
      return;
    }
  } catch (error) {
    console.log('‚ùå Servidor n√£o est√° rodando na porta 4000');
    console.log('üí° Execute: npm run dev');
    return;
  }

  // Testar sincroniza√ß√£o completa
  await testSyncCompleta();
  console.log('');
  
  // Testar sincroniza√ß√£o individual com ID 1 (ajuste conforme necess√°rio)
  await testSyncIndividual(1);
  
  console.log('\nüèÅ Testes conclu√≠dos!');
}

// Executar se chamado diretamente
if (require.main === module) {
  main().catch(console.error);
}